import javax.security.auth.Subject


buildscript {
    //配置工程的仓库地址
    repositories {
        maven{
            name 'aliyun '
            url 'https://maven.aliyun.com/'

        }
    }
    //配置工程的"插件"地址 （特别提醒这里的插件是指和gradle框架并列的 插件，就像我们操作一个项目引入了spring框架 还需要mybatis框架一样）
    dependencies {
       // classpath 'com.tencent.tinker-patch-gradle-plugin:1.7.7'
    }
}

plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly group: 'junit', name: 'junit', version: '4.12'
}
/**
 * 配置阶段开始前的监听回调
 */
this.beforeEvaluate {
    println '初始化阶段执行完毕。。。。'
}
/**
 * 配置阶段开始后的监听回调
 */
this.afterEvaluate {
    println '配置阶段执行完毕。。。。'
}
/**
 * gradle执行完毕以后的回调监听
 */
this.gradle.buildFinished {
    println '执行阶段执行完毕。。。。'
}


/**
 * 等同于 beforeEvaluate
 * */
this.gradle.beforeProject {
    println '初始化阶段执行完毕。。。。'
}
/**
 * 等同于 afterEvaluate
 * */
this.gradle.afterProject {
    println '初始化阶段执行完毕。。。。'
}


//2.如何操作一个指定的project(小提示当闭包只有一个参数时，那么闭包中的方法与属性可以直接针对这个对象参数，无需再写前缀饿了)
//指定project 只能指定他子项目不能指定父项目或者平级项目
project('Studen'){Project project->
    println "我要输出这个指定的project名字了:"+name
    println "我要输出这个指定的project的父project:"+parent.name
//    apply plugin: 'cn.piao888'
//    group 'cn.piao888'
//    version '1.0.0-sersion'
//    dependencies {}
}