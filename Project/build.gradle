plugins {
    id 'java'
}
//声明变量
ext {
    gradleConfigUrl = "http://192.168.90.222:7777/gradleConfig/"
}
//引用 versionConfig.gradle资源
apply from: resources.text.fromInsecureUri(gradleConfigUrl + 'versionConfig.gradle')
group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly group: 'junit', name: 'junit', version: '4.12'
}

/**
 * ====================================================================================
 * project 相关APIj讲解 ,扫描project是初始化 阶段 的动作
 * build.gradle里面的方法，都是在gradle 配置阶段执行的
 * 1.如何获取子类项目，父类项目，根项目
 * 2.如何操作一个指定的project
 */


//1. 如何获取子类项目，父类项目，根项目
this.getProjects()

def getProjects() {
    println '-----------------------'
    println 'Root Project'
    println '-----------------------'
    //getAllprojects会返还当前项目的所有project
    this.getAllprojects().eachWithIndex {
        Project project, int i ->
            if (i == 0) {
                println "Root Project: '${project.name}'"
            } else {
                println "+-- Project: '${project.name}'"
            }
    }

    println '-----------------------'
    println 'Sub Project'
    println '-----------------------'
    //getSubproject会返回当前项目的所有子类project
    this.getSubprojects().eachWithIndex {
        Project entry, int i ->
            println "subproject：'${entry.name}'"
            println name
    }

    //getParent 会返回当前项目的父类project,(因为此处是根project不存在父Project 所以会返回一个null 然而在null上获取name，会导致报错)
//    def parentProjectName = this.getParent().name
//    println "Parent:'${parentProjectName}'"

    //获取根project getRootProject
    def rootProjectName = this.getRootProject().name
    println "rootProjectName:'${rootProjectName}'"
}



//配置当前节点工程和其subproject的所有project
allprojects {
    group 'cn.piao888'
    version '1.0.0-sersion'
    dependencies {}
}

//通过配置文件 为 gradle扩展属性
println groupa.toString()

//配置操作所有子工程
subprojects {
//    apply from:'../READWE.md'
}

